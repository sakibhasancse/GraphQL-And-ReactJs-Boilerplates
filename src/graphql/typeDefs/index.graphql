enum TypeOfPost {
  CREATE
  DELETE
}
# type PostSubcriptionPayload {
#   mutation: TypeOfPost!
#   data: Posts!
# }

# type CommentSubcriptionPayload {
#   mutation: String!
#   data: Comments!
# }

# type Subscription {
#   comment: CommentSubcriptionPayload!
#   post: PostSubcriptionPayload!
#   user: Users!
# }

type Query {
  getPosts: [Posts!]!
  getUsers: [Users!]!
  getComments: [Comments!]!
}

type Mutation {
  createUser(createUserInputType: CreateUserInputType): Users!
  deleteUser(id: ID!): Users!
  createPost(createPostInputType: CreatePostInputType): Posts!
  deletePost(id: ID!, author: ID!): Posts!
  createComment(createCommentsInputType: CreateCommentsInputType): Comments!
  deleteComment(id: ID!, author: ID!, postId: ID!): Comments!
}
